{"version":3,"sources":["webpack:///./src/pages/blog.tsx","webpack:///./src/components/SideBar/SideBar.tsx","webpack:///./src/components/SideBar/index.ts","webpack:///./src/components/PostSnippet/PostSnippet.tsx","webpack:///./src/components/PostSnippet/index.ts"],"names":["data","PostWrapper","styled","div","BlogPage","posts","allMarkdownRemark","edges","filter","post","node","frontmatter","tags","includes","specialTags","hidden","map","tagsCollection","countByTag","sort","a","b","title","path","className","lg","key","id","dataSource","Wrapper","SideBar","props","LabelWidget","labels","Title","h2","theme","color","Meta","DateTime","time","PostSnippet","to","concat","fields","slug","date","excerpt"],"mappings":"mSAYaA,EAAO,aA0BdC,EAAcC,IAAOC,IAAV,oEAAGD,CAAH,sBAiCFE,UA7BE,SAAC,GAA8B,IACxCC,EADwC,EAA5BL,KACCM,kBAAkBC,MAAMC,QAAO,SAACC,GAAD,OAC/CA,EAAKC,KAAKC,YAAYC,KAAKC,SAASC,IAAYC,WAE7CH,EAAOP,EAAMW,KAAI,SAACP,GAAD,OAAWA,EAAKC,KAAKC,YAAYC,QAClDK,EAAqCC,YAAWN,GAGtD,OAFAK,EAAeE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE,GAAKC,EAAE,GAAK,GAAK,KAGhD,gCACE,gBAAC,IAAD,CAAKZ,KAAM,CAAEa,MAAO,KAAMC,KAAM,WAChC,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,UAAU,6BACb,gBAAC,IAAD,CAAKC,GAAI,GACP,gBAACxB,EAAD,KACCI,EAAMW,KAAI,gBAAGN,EAAH,EAAGA,KAAH,OACP,gBAAC,IAAD,CAAagB,IAAKhB,EAAKiB,GAAI3B,KAAMU,SAIvC,gBAAC,IAAD,CAAKe,GAAI,GACP,gBAAC,IAAD,CAASG,WAAaX,U,4ECvD5BY,EAAU3B,IAAOC,IAAV,uEAAGD,CAAH,2DA2BE4B,EAnB0B,SAACC,GACxC,IAAMnB,EAAOmB,EAAMH,WACnB,OACE,gBAACC,EAAD,KACA,iCAUE,gBAACG,EAAA,EAAD,CAAaC,OAAQrB,MC5BZkB,O,sFCQTI,EAAQhC,IAAOiC,GAAV,qEAAGjC,CAAH,8DAGAkC,IAAMC,OAIXC,EAAOpC,IAAOC,IAAV,oEAAGD,CAAH,sDAMJqC,EAAWrC,IAAOsC,KAAV,wEAAGtC,CAAH,wBAkBCuC,EAdkC,SAAC,GAAa,IAAXzC,EAAW,EAAXA,KAClD,OACE,8BACE,gBAAC,IAAD,CAAM0C,GAAI,SAASC,OAAO3C,EAAK4C,OAAOC,OACpC,gBAACX,EAAD,KAAQlC,EAAKW,YAAYW,QAE3B,gBAACgB,EAAD,KACE,gBAACC,EAAD,KAAWvC,EAAKW,YAAYmC,MAC5B,yBAAI9C,EAAK+C,YCjCFN","file":"component---src-pages-blog-tsx-45e402c6a89d2cd0d8f0.js","sourcesContent":["import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { graphql, Link } from \"gatsby\";\n\nimport SEO from \"../components/SEO\";\nimport Layout from \"../components/Layout\";\nimport SideBar from \"../components/SideBar\";\nimport PostSnippet from \"../components/PostSnippet\";\nimport { countByTag } from \"../utils/proc\";\nimport { specialTags } from \"../../_config.json\";\n\nexport const data = graphql`\n  query blogs {\n    allMarkdownRemark(\n      sort: {\n        fields: frontmatter___date\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY年M月D日\")\n            tags\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostWrapper = styled.div`\n  margin-top: 20px;\n`;\n\nconst BlogPage = ({ data }: IIndexPageProps) => {\n  const posts = data.allMarkdownRemark.edges.filter((post) => (\n    !post.node.frontmatter.tags.includes(specialTags.hidden)\n  ));\n  const tags = posts.map((post) => (post.node.frontmatter.tags));\n  const tagsCollection: [string, number][] = countByTag(tags);\n  tagsCollection.sort((a, b) => (a[1] < b[1] ? 1 : -1));\n  // console.log(tagsCollection);\n  return (\n    <>\n      <SEO post={{ title: \"博客\", path: \"/blog\" }} />\n      <Layout>\n        <Row className=\"justify-content-md-center\">\n          <Col lg={8}>\n            <PostWrapper>\n            {posts.map(({ node }) => (\n                <PostSnippet key={node.id} data={node} />\n            ))}\n            </PostWrapper>\n          </Col>\n          <Col lg={2}>\n            <SideBar dataSource={ tagsCollection }/>\n          </Col>\n        </Row>\n      </Layout>\n    </>\n  );\n};\n\nexport default BlogPage;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport LabelWidget from \"../LabelWidget\";\n\ninterface ISideBarProps {\n  dataSource: [string, number][];\n}\n\nconst Wrapper = styled.div`\n  display: none;\n\n  @media (min-width: 992px) {\n    display: block;\n  }\n`;\n\nconst SideBar: React.FC<ISideBarProps> = (props) => {\n  const tags = props.dataSource;\n  return (\n    <Wrapper>\n    <h2>标签:</h2>\n      {/* {tags.map(([k, v]) => {\n        return (\n          <div key={k}>\n            <a href={`/archives?tag=${k}`}>\n            <p>{k} - {v}</p>\n            </a>\n          </div>\n        );\n      })} */}\n      <LabelWidget labels={tags} />\n    </Wrapper>\n  );\n}\n\nexport default SideBar;","import SideBar from \"./SideBar\";\n\nexport default SideBar;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport { theme } from \"../../../_config.json\";\n\ninterface IPostSnippetProps {\n  data: NodeProps;\n}\n\nconst Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: ${theme.color};\n  cursor: pointer;\n`;\n\nconst Meta = styled.div`\n  margin-bottom: 1rem;\n  color: #757575;\n  font-size: 14px;\n`;\n\nconst DateTime = styled.time`\n  margin-right: 10px;\n`;\n\nconst PostSnippet: React.FC<IPostSnippetProps> = ({ data }) => {\n  return (\n    <header>\n      <Link to={`/posts`.concat(data.fields.slug)}>\n        <Title>{data.frontmatter.title}</Title>\n      </Link>\n      <Meta>\n        <DateTime>{data.frontmatter.date}</DateTime>\n        <p>{data.excerpt}</p>\n      </Meta>\n    </header>\n  );\n};\n\nexport default PostSnippet;","import PostSnippet from \"./PostSnippet\";\n\nexport default PostSnippet;"],"sourceRoot":""}