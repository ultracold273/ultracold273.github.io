{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/components/SideBar/SideBar.tsx","webpack:///./src/components/SideBar/index.ts","webpack:///./src/components/PostSnippet/PostSnippet.tsx","webpack:///./src/components/PostSnippet/index.ts","webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/components/LabelWidget/LabelWidget.tsx","webpack:///./src/components/LabelWidget/index.ts","webpack:///./src/utils/proc.ts"],"names":["$export","$entries","S","entries","it","Wrapper","styled","div","SideBar","props","tags","dataSource","LabelWidget","labels","Title","h2","theme","color","Meta","DateTime","time","PostSnippet","data","to","concat","fields","slug","frontmatter","title","date","excerpt","PostWrapper","IndexPage","posts","allMarkdownRemark","edges","filter","post","node","includes","specialTags","hidden","map","tagsCollection","countByTag","sort","a","b","Layout","Row","className","Col","lg","key","id","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","i","result","call","push","Labels","span","Label","console","log","k","href","ltags","tag","t","Object","l","c","e","countBy"],"mappings":"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","file":"component---src-pages-index-tsx-b00305470290c7133b93.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport LabelWidget from \"../LabelWidget\";\n\ninterface ISideBarProps {\n  dataSource: [string, number][];\n}\n\nconst Wrapper = styled.div`\n  display: none;\n\n  @media (min-width: 992px) {\n    display: block;\n  }\n`;\n\nconst SideBar: React.FC<ISideBarProps> = (props) => {\n  const tags = props.dataSource;\n  return (\n    <Wrapper>\n    <h2>标签:</h2>\n      {/* {tags.map(([k, v]) => {\n        return (\n          <div key={k}>\n            <a href={`/archives?tag=${k}`}>\n            <p>{k} - {v}</p>\n            </a>\n          </div>\n        );\n      })} */}\n      <LabelWidget labels={tags} />\n    </Wrapper>\n  );\n}\n\nexport default SideBar;","import SideBar from \"./SideBar\";\n\nexport default SideBar;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\nimport { theme } from \"../../../_config.json\";\n\ninterface IPostSnippetProps {\n  data: NodeProps;\n}\n\nconst Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 10px;\n  color: ${theme.color};\n  cursor: pointer;\n`;\n\nconst Meta = styled.div`\n  margin-bottom: 1rem;\n  color: #757575;\n  font-size: 14px;\n`;\n\nconst DateTime = styled.time`\n  margin-right: 10px;\n`;\n\nconst PostSnippet: React.FC<IPostSnippetProps> = ({ data }) => {\n  return (\n    <header>\n      <Link to={`/posts`.concat(data.fields.slug)}>\n        <Title>{data.frontmatter.title}</Title>\n      </Link>\n      <Meta>\n        <DateTime>{data.frontmatter.date}</DateTime>\n        <p>{data.excerpt}</p>\n      </Meta>\n    </header>\n  );\n};\n\nexport default PostSnippet;","import PostSnippet from \"./PostSnippet\";\n\nexport default PostSnippet;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { graphql, Link } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport SideBar from \"../components/SideBar\";\nimport PostSnippet from \"../components/PostSnippet\";\nimport { countByTag } from \"../utils/proc\";\nimport { specialTags } from \"../../_config.json\";\n\nexport const data = graphql`\n  query markdown {\n    allMarkdownRemark(\n      sort: {\n        fields: frontmatter___date\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY年M月D日\")\n            tags\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst PostWrapper = styled.div`\n  margin-top: 20px;\n`;\n\nconst IndexPage = ({ data }: IIndexPageProps) => {\n  const posts = data.allMarkdownRemark.edges.filter((post) => (\n    !post.node.frontmatter.tags.includes(specialTags.hidden)\n  ));\n  const tags = posts.map((post) => (post.node.frontmatter.tags));\n  const tagsCollection: [string, number][] = countByTag(tags);\n  tagsCollection.sort((a, b) => (a[1] < b[1] ? 1 : -1));\n  // console.log(tagsCollection);\n  return (\n    <Layout>\n      <Row className=\"justify-content-md-center\">\n        <Col lg={8}>\n          <PostWrapper>\n          {posts.map(({ node }) => (\n              <PostSnippet key={node.id} data={node} />\n          ))}\n          </PostWrapper>\n        </Col>\n        <Col lg={2}>\n          <SideBar dataSource={ tagsCollection }/>\n        </Col>\n      </Row>\n    </Layout>\n  );\n};\n\nexport default IndexPage;","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\n\ninterface ILabelWidgetProps {\n  labels: [string, number][];\n}\n\nconst Labels = styled.span`\n  margin-right: 10px;\n`;\n\nconst Label = styled.a`\n  box-shadow: none;\n  font-size: 14px;\n  cursor: pointer;\n  padding: 2px 2px;\n  display: inline-block;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst LabelWidget: React.FC<ILabelWidgetProps> = ({ labels }) => {\n  console.log(labels);\n  return (\n    <Labels>\n      {labels.map(([k, v]) => (\n        <Label href={`/archives?tag=${k}`} key={k}>#{k}</Label>\n      ))}\n    </Labels>\n  );\n}\n\nexport default LabelWidget;","import LabelWidget from \"./LabelWidget\";\n\nexport default LabelWidget;","\nconst countBy = (l: string[]) => {\n  let c: {[index: string]: number} = {};\n  for (let e of l) {\n    c[e] = c[e] ? c[e] + 1 : 1;\n  }\n  return c;\n}\n\nexport const countByTag = (ltags: string[][]) => {\n  let tag: string[] = [];\n  for (let t of ltags) {\n    tag = [...tag, ...t];\n  }\n  return Object.entries(countBy(tag));\n}\n"],"sourceRoot":""}