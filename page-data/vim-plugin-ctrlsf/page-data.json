{"componentChunkName":"component---src-templates-post-tsx","path":"/vim-plugin-ctrlsf/","result":{"data":{"markdownRemark":{"html":"<p>这两天一直在看文档看源码，Vim 上用的 Ack.vim 做全局搜索，但是用起来蛮难用的。</p>\n<p>经过一番搜索，找到了国人写的全局搜索的插件：ctrlsf.vim，经过配置之后用了起来，感觉蛮好用的。</p>\n<p>具体效果可以查看 <a href=\"https://github.com/dyng/ctrlsf.vim\">ctrlsf.vim</a></p>\n<!--more-->\n<h2>安装</h2>\n<p>ctrlsf 是依赖 ack/ag/pt/rg 之类的，所有必须先安装其中之一。所以我们先安装 ack</p>\n<pre><code class=\"language-bash\">$ brew install ack\n</code></pre>\n<p>其他系统安装方式查看：<a href=\"https://beyondgrep.com/install/\">https://beyondgrep.com/install/</a></p>\n<p>然后安装 ctrlsf.vim 插件</p>\n<pre><code class=\"language-viml\">Plug 'dyng/ctrlsf.vim'\n</code></pre>\n<p>运行 <code>:PlugInstall</code> 进行安装</p>\n<h2>配置</h2>\n<p>我把 <code>Ctrl-f</code> 映射到了 <code>:CrtlSF&#x3C;Space></code>，这样就可以直接 <code>Ctrl-f</code> 然后直接输入、回车进行全局搜索了。</p>\n<pre><code class=\"language-viml\">nnoremap &#x3C;C-f> :CtrlSF&#x3C;Space>\n</code></pre>\n<p>ctrlsf 插件还提供了两种模式：normal/compact。\nnormal 模式是左半屏为搜索结果，右半屏为预览窗口。而 compact 模式则是类似于 ctrlp 的 quickfix 窗口模式。\n个人还是比较喜欢 quick 窗口模式，可以通过 <code>let g:ctrlsf_default_view_mode = 'compact'</code> 设置为默认 compact 模式。</p>\n<p>此外通过设置 <code>let g:ctrlsf_ignore_dir</code> 指定要搜索时忽略的目录。</p>\n<h2>使用</h2>\n<p>设置了快捷键映射之后就可以愉快的 <code>C-f</code> 输入回车搜索了。然后可以在搜索结果中移动，预览，打开。还能够按 M 更换显示模式。</p>\n<p>具体可以查看：<a href=\"https://github.com/dyng/ctrlsf.vim#key-maps\">Key Maps</a></p>","rawMarkdownBody":"\n这两天一直在看文档看源码，Vim 上用的 Ack.vim 做全局搜索，但是用起来蛮难用的。\n\n经过一番搜索，找到了国人写的全局搜索的插件：ctrlsf.vim，经过配置之后用了起来，感觉蛮好用的。\n\n具体效果可以查看 [ctrlsf.vim](https://github.com/dyng/ctrlsf.vim)\n\n<!--more-->\n\n## 安装\nctrlsf 是依赖 ack/ag/pt/rg 之类的，所有必须先安装其中之一。所以我们先安装 ack\n\n```bash\n$ brew install ack\n```\n\n其他系统安装方式查看：https://beyondgrep.com/install/\n\n然后安装 ctrlsf.vim 插件\n\n```viml\nPlug 'dyng/ctrlsf.vim'\n```\n\n运行 `:PlugInstall` 进行安装\n\n## 配置\n我把 `Ctrl-f` 映射到了 `:CrtlSF<Space>`，这样就可以直接 `Ctrl-f` 然后直接输入、回车进行全局搜索了。\n\n```viml\nnnoremap <C-f> :CtrlSF<Space>\n```\n\nctrlsf 插件还提供了两种模式：normal/compact。\nnormal 模式是左半屏为搜索结果，右半屏为预览窗口。而 compact 模式则是类似于 ctrlp 的 quickfix 窗口模式。\n个人还是比较喜欢 quick 窗口模式，可以通过 `let g:ctrlsf_default_view_mode = 'compact'` 设置为默认 compact 模式。\n\n此外通过设置 `let g:ctrlsf_ignore_dir` 指定要搜索时忽略的目录。\n\n## 使用\n设置了快捷键映射之后就可以愉快的 `C-f` 输入回车搜索了。然后可以在搜索结果中移动，预览，打开。还能够按 M 更换显示模式。\n\n具体可以查看：[Key Maps](https://github.com/dyng/ctrlsf.vim#key-maps)\n\n","frontmatter":{"title":"Vim 全局搜索插件：ctrlsf.vim","date":"2017年6月29日","tags":["Vim"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/vim-plugin-ctrlsf/"}}}