{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/posts/xmlhttprequest-study-notes/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。</p>\n</blockquote>\n<p>Ajax 技术的核心是 <code>XMLHttpRequest</code> 对象，起初 IE 首先引入这个特性，后面其他浏览器供应商也提供了相同的实现。</p>\n<h2>XMLHttpRequest 对象</h2>\n<p>XMLHttpRequest 是一个API, 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。</p>\n<!--more-->\n<h3>主要方法</h3>\n<ul>\n<li>open() 启动请求以备发送，参数包括请求方式，请求地址，是否异步</li>\n<li>send() 发送请求，必要参数可发送请求主体数据，无数据时传入 null</li>\n<li>abort() 发起异步请求时，终止请求</li>\n<li>setRequestHeader() 设置请求头部信息</li>\n<li>getRequestHeader() 获取请求头部信息</li>\n<li>getAllRequestHeader() 获取全部请求头部信息，以字符串的形式返回</li>\n</ul>\n<h3>主要属性</h3>\n<ul>\n<li>status 响应的 HTTP 状态码</li>\n<li>statusText 响应的 HTTP 状态说明</li>\n<li>responseText 作为响应主体返回的文本</li>\n<li>responseXML 响应数据中的 XML DOM 文档</li>\n<li>readyState 请求/响应过程的当前活动阶段</li>\n<li>0 未初始化，没有使用 <code>open()</code></li>\n<li>1 启动，调用 <code>open()</code> 但未调用 <code>send()</code></li>\n<li>2 发送，已经调用 <code>send()</code>，但未接收到响应数据</li>\n<li>3 接收，接收到部分响应数据</li>\n<li>4 完成，接收到全部响应数据</li>\n</ul>\n<h3>readystatechange 事件</h3>\n<p>当 readyState 属性值改变时触发 readystatechange 事件。通过判断 readystate 属性的值，在完成请求响应整个过程之后执行某些操作。</p>","rawMarkdownBody":"\n> AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。\n\nAjax 技术的核心是 `XMLHttpRequest` 对象，起初 IE 首先引入这个特性，后面其他浏览器供应商也提供了相同的实现。\n\n## XMLHttpRequest 对象\n\nXMLHttpRequest 是一个API, 它为客户端提供了在客户端和服务器之间传输数据的功能。它提供了一个通过 URL 来获取数据的简单方式，并且不会使整个页面刷新。\n\n<!--more-->\n\n### 主要方法\n\n- open() 启动请求以备发送，参数包括请求方式，请求地址，是否异步\n\n- send() 发送请求，必要参数可发送请求主体数据，无数据时传入 null\n\n- abort() 发起异步请求时，终止请求\n\n- setRequestHeader() 设置请求头部信息\n\n- getRequestHeader() 获取请求头部信息\n\n- getAllRequestHeader() 获取全部请求头部信息，以字符串的形式返回\n\n### 主要属性\n\n- status 响应的 HTTP 状态码\n\n- statusText 响应的 HTTP 状态说明\n\n- responseText 作为响应主体返回的文本\n\n- responseXML 响应数据中的 XML DOM 文档\n\n- readyState 请求/响应过程的当前活动阶段\n\n - 0 未初始化，没有使用 `open()`\n\n - 1 启动，调用 `open()` 但未调用 `send()`\n\n - 2 发送，已经调用 `send()`，但未接收到响应数据\n\n - 3 接收，接收到部分响应数据\n\n - 4 完成，接收到全部响应数据\n\n### readystatechange 事件\n\n当 readyState 属性值改变时触发 readystatechange 事件。通过判断 readystate 属性的值，在完成请求响应整个过程之后执行某些操作。\n","frontmatter":{"title":"XMLHttpRequest 学习笔记","date":"2017年3月2日","tags":["JavaScript","前端"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/xmlhttprequest-study-notes/"}}}