{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/posts/getting-highlightjs-to-work-with-vue.js/","result":{"data":{"markdownRemark":{"html":"<p>今天遇到一个问题：在使用 vue 的练手项目中，渲染的 HTML 里 <code>&#x3C;code></code> 标签中的代码没有代码高亮。</p>\n<p>遂想到用 highlight.js 来解决，按照平常那样在 HTML 文件中引入 <code>js</code> 和 <code>css</code> 文件，然后在<code>&#x3C;header></code> 中加上一句 <code>&#x3C;script>hljs.initHighlightingOnLoad();&#x3C;/script></code>。但是却没有效果。</p>\n<p>在 Vue.js 的论坛上找到了解决方案 <a href=\"https://forum.vuejs.org/topic/3514/getting-highlightjs-to-work-with-vue-router\">Getting highlightjs to work with vue-router</a>。highlight.js 没有效果是因为使用了 <code>vue-route</code>，在 route 改变时，页面将会重新渲染并且会移除事件，这里就把 highlight 的事件给移除了。</p>\n<!--more-->\n<h2>Solution</h2>\n<p>所以得到的解决方案是，使用 Vue.js 的自定义指令，定义一个叫做 <code>v-highlight</code> 的指令来使得 <code>&#x3C;pre>&#x3C;code> .. &#x3C;/code>&#x3C;/pre></code> 中的代码高亮。</p>\n<p>定义自定义指令：</p>\n<pre><code class=\"language-js\">import Hljs from 'highlight.js'\n\nVue.directive('highlightjs', function() {\n  let blocks = this.el.querySelectorAll('pre code');\n  Array.prototype.forEach.call(blocks, Hljs.highlightBlock);\n})\n</code></pre>\n<p>这里 import 了 highlight.js，所以需要 <code>npm install highlight.js</code>。导入之后使用 <code>Vue.directive()</code> 定义 <code>v-highlightjs</code> 指令，获取使用该指令的 document 中的 <code>pre code</code> 部分，并使用 highlight.js 的 <code>highlightBlock</code> 使其高亮。</p>\n<h2>How to use</h2>\n<p>之后在需要高亮的地方，使用 <code>v-highlightjs</code> 指令即可用使得其中的 <code>&#x3C;pre>&#x3C;code> .. &#x3C;/code>&#x3C;/pre></code> 部分高亮。</p>\n<pre><code class=\"language-html\">&#x3C;div v-html=\"your_content\" v-highlightjs>\n&#x3C;/div>\n</code></pre>","rawMarkdownBody":"\n今天遇到一个问题：在使用 vue 的练手项目中，渲染的 HTML 里 `<code>` 标签中的代码没有代码高亮。\n\n遂想到用 highlight.js 来解决，按照平常那样在 HTML 文件中引入 `js` 和 `css` 文件，然后在`<header>` 中加上一句 `<script>hljs.initHighlightingOnLoad();</script>`。但是却没有效果。\n\n在 Vue.js 的论坛上找到了解决方案 [Getting highlightjs to work with vue-router](https://forum.vuejs.org/topic/3514/getting-highlightjs-to-work-with-vue-router)。highlight.js 没有效果是因为使用了 `vue-route`，在 route 改变时，页面将会重新渲染并且会移除事件，这里就把 highlight 的事件给移除了。\n<!--more-->\n\n## Solution\n所以得到的解决方案是，使用 Vue.js 的自定义指令，定义一个叫做 `v-highlight` 的指令来使得 `<pre><code> .. </code></pre>` 中的代码高亮。\n\n定义自定义指令：\n``` js\nimport Hljs from 'highlight.js'\n\nVue.directive('highlightjs', function() {\n  let blocks = this.el.querySelectorAll('pre code');\n  Array.prototype.forEach.call(blocks, Hljs.highlightBlock);\n})\n```\n\n这里 import 了 highlight.js，所以需要 `npm install highlight.js`。导入之后使用 `Vue.directive()` 定义 `v-highlightjs` 指令，获取使用该指令的 document 中的 `pre  code` 部分，并使用 highlight.js 的 `highlightBlock` 使其高亮。\n\n## How to use\n之后在需要高亮的地方，使用 `v-highlightjs` 指令即可用使得其中的 `<pre><code> .. </code></pre>` 部分高亮。\n\n``` html\n<div v-html=\"your_content\" v-highlightjs>\n</div>\n```\n","frontmatter":{"title":"Vue 中使用 highlight.js","date":"2016年7月13日","tags":["Vue","前端"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/getting-highlightjs-to-work-with-vue.js/"}}}