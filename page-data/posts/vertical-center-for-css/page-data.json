{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/vertical-center-for-css/","result":{"data":{"markdownRemark":{"html":"<p>我们有这样一个结构的 HTML：</p>\n<pre><code class=\"language-html\">&#x3C;div class=\"parent\">\n  &#x3C;div class=\"children\">&#x3C;/div>\n&#x3C;/div>\n</code></pre>\n<p>如果我们要实现 <code>.children</code> 在 <code>.parent</code> 中垂直居中。</p>\n<p>通常第一印象会想起给父元素设置相对定位，给子元素设置绝对定位。这样子元素就相对于父元素定位，再通过 <code>top</code> 与 <code>left</code> 各偏移 50% 父元素宽度，使用 <code>margin-*</code> 来修正子元素的位置。</p>\n<!--more-->\n<pre><code class=\"language-css\">.parent {\n  position: relative;\n}\n\n.chilren {\n  width: $width;\n  height: $height;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -$height/2;\n  margin-left: -$width/2;\n}\n</code></pre>\n<p>通过这种方式可以使得子元素在父元素中垂直居中。但是这种实现的方式需要知道子元素的宽高，以方便使用 <code>margin-*</code> 来修正之前的位置。</p>\n<p>当不知道子元素的宽高时，这种方法就无法实现正真的垂直居中。这个时候就可以使用 <code>transform: translate(-50%, -50%);</code> 来实现子元素自身的偏移。</p>\n<pre><code class=\"language-CSS\">.parent {\n  position: relative;\n}\n\n.chilren {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n</code></pre>\n<p>那么不使用定位是否能够使元素垂直居中呢？</p>\n<p>这时候我们来想想要使元素水平居中的时候，我们会怎么做？Ok，一般我们都会用 <code>margin: 0 auto</code>;那么我们就可以让 <code>margin-top: 50%</code>, 这样的效果就跟相对定位时的 <code>top: 50%</code> 的效果差不多。接着就可以使用之前使用过的 <code>transform</code> 属性来使得元素向上偏移自身高度的一半，也就是 <code>transform: translateY(-50%);</code>。</p>\n<p>这样就可以实现不使用定位来来使得元素垂直居中了。</p>\n<pre><code class=\"language-CSS\">.chilren {\n  margin: 50% auto 0;\n  transform: translateY(50%);\n}\n</code></pre>\n<p>除了上面的这些方法之外，还可以使用 Flexbox 布局来实现。</p>\n<p>只需要在父元素中使用 <code>display: flex;</code>，然后在子元素上使用 <code>margin: auto;</code> 就可以实现垂直居中了。</p>\n<pre><code class=\"language-CSS\">.parent {\n  display: flex;\n}\n\n.chilren {\n  margin: auto;\n}\n</code></pre>\n<p>另外还有几种实现垂直居中的方法，并不常见与常用，使用就不提了。</p>","rawMarkdownBody":"\n我们有这样一个结构的 HTML：\n\n``` html\n<div class=\"parent\">\n  <div class=\"children\"></div>\n</div>\n```\n\n如果我们要实现 `.children` 在 `.parent` 中垂直居中。\n\n通常第一印象会想起给父元素设置相对定位，给子元素设置绝对定位。这样子元素就相对于父元素定位，再通过 `top` 与 `left` 各偏移 50% 父元素宽度，使用 `margin-*` 来修正子元素的位置。\n<!--more-->\n\n``` css\n.parent {\n  position: relative;\n}\n\n.chilren {\n  width: $width;\n  height: $height;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -$height/2;\n  margin-left: -$width/2;\n}\n```\n\n通过这种方式可以使得子元素在父元素中垂直居中。但是这种实现的方式需要知道子元素的宽高，以方便使用 `margin-*` 来修正之前的位置。\n\n当不知道子元素的宽高时，这种方法就无法实现正真的垂直居中。这个时候就可以使用 `transform: translate(-50%, -50%);` 来实现子元素自身的偏移。\n\n``` CSS\n.parent {\n  position: relative;\n}\n\n.chilren {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n```\n\n那么不使用定位是否能够使元素垂直居中呢？\n\n这时候我们来想想要使元素水平居中的时候，我们会怎么做？Ok，一般我们都会用 `margin: 0 auto`;那么我们就可以让 `margin-top: 50%`, 这样的效果就跟相对定位时的 `top: 50%` 的效果差不多。接着就可以使用之前使用过的 `transform` 属性来使得元素向上偏移自身高度的一半，也就是 `transform: translateY(-50%);`。\n\n这样就可以实现不使用定位来来使得元素垂直居中了。\n\n``` CSS\n.chilren {\n  margin: 50% auto 0;\n  transform: translateY(50%);\n}\n```\n\n除了上面的这些方法之外，还可以使用 Flexbox 布局来实现。\n\n只需要在父元素中使用 `display: flex;`，然后在子元素上使用 `margin: auto;` 就可以实现垂直居中了。\n\n``` CSS\n.parent {\n  display: flex;\n}\n\n.chilren {\n  margin: auto;\n}\n```\n\n另外还有几种实现垂直居中的方法，并不常见与常用，使用就不提了。\n","frontmatter":{"title":"CSS 实现垂直居中","date":"2016年6月29日","tags":["CSS","前端"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/vertical-center-for-css/"}}}