{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/use-neovim/","result":{"data":{"markdownRemark":{"html":"<p>很久之前就听说过 Neovim，但一直没有怎么了解过。昨天下午折腾了一下，彻底转投 Neovim 了。</p>\n<p>虽然说这两货的差别目前还不是很大，但是 Neovim 实现了嵌入式终端模拟器，Excited! 各种 REPL 插件统统都可以卸载了！</p>\n<!--more-->\n<h2>迁移配置文件</h2>\n<p>Neovim 配置完全兼容原来的 <code>.vimrc</code>，只需要：</p>\n<pre><code class=\"language-bash\">mkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}\nln -s ~/.vim $XDG_CONFIG_HOME/nvim\nln -s ~/.vimrc $XDG_CONFIG_HOME/nvim/init.vim\n</code></pre>\n<h2>使用 ale 代替 syntastic</h2>\n<p>老早就觉得 <code>syntastic</code> 同步检查代码好难用，这下换成 <code>ale</code> 舒服多了。有之前使用 atom 时自带的代码检查的感觉。</p>\n<p>(Vim 8 好像也已经提供了异步 API，但是我等到换成 Neovim 才知道..)</p>\n<h2>把 Leader 改成空格</h2>\n<p>其实是看了 <a href=\"https://zhuanlan.zhihu.com/p/25905625\">Vim 高效率配置导论</a> 这篇文章之后试着改的，改完发现空格比起原先的 <code>,</code> 好用多了。让大拇指动了起来。</p>\n<p>然后切换 buffter 的快捷键就映射成了 <code>&#x3C;Space> + n/m</code>，简直不要太顺手。</p>\n<h2>使用 Spacegray 主题</h2>\n<p>之前使用的 <code>molokai</code> 看久了有点视觉疲劳，发现之前在用 <code>sublime text</code> 时使用的 <code>Spacegray</code> 也有 Vim 版本，果断换之。（折腾高亮主题是永恒的.. ）</p>\n<h2>优化难用的缩进调整</h2>\n<p>在 Visual 模式下调整缩进很不好用，<code>v></code> 之后又得重新选中，虽然说可以 <code>v3></code> 之类的，但是需要去计算多少个缩进，看起来并不是很明显。</p>\n<p>遂，添加了下面这两个 mapping：</p>\n<pre><code>vnoremap &#x3C; &#x3C;v\nvnoremap > >v\n</code></pre>\n<p>这样映射之后我就可以 <code>v>>></code> 去缩进了，好用到不行！</p>\n<h2>Vim 使用总结</h2>\n<p>使用 Vim 也差不多一个来月了，越来越发现 Vim 的便利之处，虽然说折腾配置插件花的时间会久一点。但是折腾完之后效率提高还是蛮多的，以至于现在在别的编辑器里下意识的用 Vim 模式，发现没有之后用方向键或者鼠标去移动都觉得超级慢。</p>\n<p>开始理解 Vim 学习路线那张图表的意思了～</p>\n<blockquote>\n<p>我的 Vim 配置：<a href=\"https://github.com/ahonn/vimrc\">vimrc</a></p>\n</blockquote>","rawMarkdownBody":"\n很久之前就听说过 Neovim，但一直没有怎么了解过。昨天下午折腾了一下，彻底转投 Neovim 了。\n\n虽然说这两货的差别目前还不是很大，但是 Neovim 实现了嵌入式终端模拟器，Excited! 各种 REPL 插件统统都可以卸载了！\n\n<!--more-->\n\n## 迁移配置文件\nNeovim 配置完全兼容原来的 `.vimrc`，只需要：\n\n``` bash\nmkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}\nln -s ~/.vim $XDG_CONFIG_HOME/nvim\nln -s ~/.vimrc $XDG_CONFIG_HOME/nvim/init.vim\n```\n\n## 使用 ale 代替 syntastic\n老早就觉得 `syntastic` 同步检查代码好难用，这下换成 `ale` 舒服多了。有之前使用 atom 时自带的代码检查的感觉。\n\n(Vim 8 好像也已经提供了异步 API，但是我等到换成 Neovim 才知道..)\n\n## 把 Leader 改成空格\n其实是看了 [Vim 高效率配置导论](https://zhuanlan.zhihu.com/p/25905625) 这篇文章之后试着改的，改完发现空格比起原先的 `,` 好用多了。让大拇指动了起来。\n\n然后切换 buffter 的快捷键就映射成了 `<Space> + n/m`，简直不要太顺手。\n\n## 使用 Spacegray 主题\n之前使用的 `molokai` 看久了有点视觉疲劳，发现之前在用 `sublime text` 时使用的 `Spacegray` 也有 Vim 版本，果断换之。（折腾高亮主题是永恒的.. ）\n\n## 优化难用的缩进调整\n在 Visual 模式下调整缩进很不好用，`v>` 之后又得重新选中，虽然说可以 `v3>` 之类的，但是需要去计算多少个缩进，看起来并不是很明显。\n\n遂，添加了下面这两个 mapping：\n\n```\nvnoremap < <v\nvnoremap > >v\n```\n\n这样映射之后我就可以 `v>>>` 去缩进了，好用到不行！\n\n## Vim 使用总结\n使用 Vim 也差不多一个来月了，越来越发现 Vim 的便利之处，虽然说折腾配置插件花的时间会久一点。但是折腾完之后效率提高还是蛮多的，以至于现在在别的编辑器里下意识的用 Vim 模式，发现没有之后用方向键或者鼠标去移动都觉得超级慢。\n\n开始理解 Vim 学习路线那张图表的意思了～\n\n> 我的 Vim 配置：[vimrc](https://github.com/ahonn/vimrc)\n\n\n","frontmatter":{"title":"转投 Neovim","date":"2017年3月27日","tags":["Vim"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/use-neovim/"}}}