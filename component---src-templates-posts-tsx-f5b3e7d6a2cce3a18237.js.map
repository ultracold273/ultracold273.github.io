{"version":3,"sources":["webpack://lingxiao-website/./src/templates/posts.tsx"],"names":["Title","config","post","data","markdownRemark","isMath","frontmatter","tags","includes","title","source","rawMarkdownBody","math"],"mappings":"0MAsDMA,GAAK,0EAGEC,OAHF,KAoBX,UAdiB,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACEC,eACZC,EAASH,EAAKI,YAAYC,KAAKC,SAASP,QAC9C,OACI,yBACI,QAAC,IAAD,CAAKC,KAAOA,EAAKI,YAAYG,SAC7B,QAAC,IAAD,MACI,QAACT,EAAD,KAAQE,EAAKI,YAAYG,QACzB,QAAC,IAAD,CAAUC,OAAQR,EAAKS,gBAAiBC,KAAMP","file":"component---src-templates-posts-tsx-f5b3e7d6a2cce3a18237.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\nimport { graphql } from \"gatsby\";\n\nimport config from \"../../_config.json\";\nimport Layout from '../components/Layout';\nimport Markdown from '../components/Markdown'\nimport SEO from '../components/SEO';\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug(\n        $id: String!\n        $previousPostId: String\n        $nextPostId: String\n    ) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            rawMarkdownBody\n            frontmatter {\n                title\n                tags\n                date(formatString: \"YYYY.MM.DD\")\n            }\n        }\n        previous: markdownRemark(id: { eq: $previousPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n        next: markdownRemark(id: { eq: $nextPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n    }\n`\n\n// const Container = styled.div`\n//     margin: 5% 10% 2% 10%\n// `\n\nconst Title = styled.h1`\n    margin: 0px;\n    padding-bottom: 20px;\n    color: ${config.theme.postColor}\n`;\n\nconst PostPage = ({ data }) => {\n    const post = data.markdownRemark\n    const isMath = post.frontmatter.tags.includes(config.specialTags.math);\n    return (\n        <>\n            <SEO post={ post.frontmatter.title } />\n            <Layout>\n                <Title>{post.frontmatter.title}</Title>\n                <Markdown source={post.rawMarkdownBody} math={isMath} />\n            </Layout>\n        </>\n    )\n}\n\nexport default PostPage;"],"sourceRoot":""}